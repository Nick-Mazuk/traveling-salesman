!function(t){var e={};function i(n){if(e[n])return e[n].exports;var s=e[n]={i:n,l:!1,exports:{}};return t[n].call(s.exports,s,s.exports,i),s.l=!0,s.exports}i.m=t,i.c=e,i.d=function(t,e,n){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var s in t)i.d(n,s,function(e){return t[e]}.bind(null,s));return n},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=0)}([function(t,e,i){"use strict";function n(t,e,i){return e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}function s(t,e){var i=e.get(t);if(!i)throw new TypeError("attempted to get private field on non-instance");return i.get?i.get.call(t):i.value}i.r(e);class r{constructor(t,e){n(this,"cityA",void 0),n(this,"cityB",void 0),o.set(this,{writable:!0,value:3}),c.set(this,{writable:!0,value:"#757575"}),this.cityA=t,this.cityB=e}draw(t){t.beginPath(),t.moveTo(this.cityA.xPos,this.cityA.yPos),t.lineTo(this.cityB.xPos,this.cityB.yPos),t.strokeStyle=s(this,c),t.lineWidth=s(this,o),t.stroke()}length(){return this.cityA.distanceFromCity(this.cityB)}}var o=new WeakMap,c=new WeakMap;function a(t,e,i){return e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}class h{constructor(t=[]){a(this,"cities",void 0),a(this,"roads",void 0),this.cities=[],t.forEach(t=>this.cities.push(t)),this.roads=[]}length(){this._createRoads();let t=0;return this.roads.forEach(e=>t+=e.length()),t}_createRoads(){if(this.roads=[],this.cities.length>2){for(let t=0;t<this.cities.length-1;t++)this.roads.push(new r(this.cities[t],this.cities[t+1]));this.roads.push(new r(this.cities[this.cities.length-1],this.cities[0]))}return this.roads}addCity(t){this.cities.push(t)}draw(t){t.clearRect(0,0,t.canvas.clientWidth,t.canvas.clientHeight),this._createRoads(),this.roads.forEach(e=>e.draw(t)),this.cities.forEach(e=>e.draw(t))}positionInCity(t,e){return this.cities.filter(i=>i.pointIsInCity(t,e))}randomizeRoute(){this.cities=this.cities.sort(()=>Math.random()-.5)}getRandomCityIndex(t=0,e=this.cities.length){return(Math.floor(Math.random()*Math.min(this.cities.length,e))+t)%this.cities.length}getCityByIndex(t){return this.cities[t]}swapCitiesByIndex(t,e){let i=this.cities[t];this.cities[t]=this.cities[e],this.cities[e]=i}removeCity(t){this.cities=this.cities.filter(e=>e.xPos!=t.xPos&&e.yPos!=t.yPos)}findNeighbors(t){if(0==this.cities.includes(t))throw new Error("City is not in tour, cannot find neighbors");if(this.cities.length<3)throw new Error("Tour does not have enough cities to find neighbors");let e=[],i=this.cities.indexOf(t);switch(i){case 0:e.push(this.cities[this.cities.length-1]),e.push(this.cities[1]);break;case this.cities.length-1:e.push(this.cities[i-1]),e.push(this.cities[0]);break;default:e.push(this.cities[i-1]),e.push(this.cities[i+1])}return e}cityNeighborsAreClosest(t){const e=this.findNeighbors(t),i=Math.max(...e.map(e=>t.distanceFromCity(e)));for(let n=0;n<this.cities.length;n++){if(e.includes(this.cities[n])||this.cities[n]==t)continue;if(t.distanceFromCity(this.cities[n])<=i)return!1}return!0}}class l{static optimize(t,e,i,n){if(t.cities.length<4)return t;switch(e){case"annealing":t=l.annealing(t,i,!!n);break;case"greedy":t=l.greedy(t)}return t}static annealing(t,e,i,n=150,s=.001){function r(t,e,i){return i*(1-t/e)+1e-4}null!=e&&(n=(e.getBoundingClientRect().width+e.getBoundingClientRect().height)/18);let o=i?1.8:2.5,c=100*t.cities.length+(t.cities.length>10?(t.cities.length-10)**o:0),a=0,l=t.length(),u=new h(t.cities),d=u,f=l;for(;a<c;){let t=r(a,c,n);const e=new h(d.cities),i=e.getRandomCityIndex();let s=e.getRandomCityIndex(i,t);for(;i==s;)s=e.getRandomCityIndex();e.swapCitiesByIndex(i,s);const o=e.length();(o<f||Math.random()<=Math.exp(-Math.abs(o-f)/t))&&(d=new h(e.cities),f=o),o<l&&(l=e.length(),u=e),a++}return u}static greedy(t){if(t.cities.length<4)return t;for(let e=0;e<t.cities.length-1;e++){let i=e+1,n=1/0;for(let s=i;s<t.cities.length;s++){let r=t.cities[e].distanceFromCity(t.cities[s]);r<n&&(i=s,n=r)}t.swapCitiesByIndex(e+1,i)}return t}}function u(t,e,i){return e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}class d{constructor(t,e){u(this,"xPos",void 0),u(this,"yPos",void 0),f.set(this,{writable:!0,value:"#757575"}),this.xPos=t,this.yPos=e}draw(t){t.beginPath(),t.arc(this.xPos,this.yPos,d.radius,0,2*Math.PI),t.fillStyle=function(t,e){var i=e.get(t);if(!i)throw new TypeError("attempted to get private field on non-instance");return i.get?i.get.call(t):i.value}(this,f),t.fill()}pointIsInCity(t,e){return this.distanceFromPoint(t,e)<d.radius}distanceFromPoint(t,e){return Math.sqrt((t-this.xPos)**2+(e-this.yPos)**2)}distanceFromCity(t){return Math.sqrt((t.xPos-this.xPos)**2+(t.yPos-this.yPos)**2)}move(t,e){this.xPos=t,this.yPos=e}}var f=new WeakMap;let g,y;u(d,"radius",10);let p,v,w=new h;function m(t=!1){w=t?l.optimize(w,"annealing",g,p):l.optimize(w,"annealing",g),w.draw(y)}function b(t){return[t.clientX-g.getBoundingClientRect().left,t.clientY-g.getBoundingClientRect().top]}function P(t){if(!(3==t.which||2==t.button)){v=b(t);let i=(null==e&&(e=v),w.positionInCity(e[0],e[1]));i.length?p=i[0]:function(t){let e=t.clientX-g.getBoundingClientRect().left-d.radius/2,i=t.clientY-g.getBoundingClientRect().top-d.radius/2,n=new d(e,i);w.addCity(n),m()}(t)}var e}function C(t){let e=b(t);var i,n;p&&(i=e,n=v,Math.sqrt((i[0]-n[0])**2+(i[1]-n[1])**2)<d.radius)&&(w.removeCity(p),p=void 0,m()),v=void 0,p=void 0}function x(t){if(p){let e=b(t);p.move(e[0],e[1]),m(!0)}}window.addEventListener("DOMContentLoaded",(function(){g=document.querySelector("canvas"),function(t){const e=window.devicePixelRatio||1,i=t.getBoundingClientRect();t.width=i.width*e,t.height=i.height*e,y=t.getContext("2d"),y.scale(e,e),t.addEventListener("mousedown",P),t.addEventListener("mouseup",C),t.addEventListener("mousemove",x)}(g),function(){const t=g.getBoundingClientRect().width,e=g.getBoundingClientRect().height,i=d.radius;for(let n=0;n<5;n++){const n=new d(Math.floor(Math.random()*(t-2*i))+i,Math.floor(Math.random()*(e-2*i))+i);w.addCity(n)}m()}()}))}]);