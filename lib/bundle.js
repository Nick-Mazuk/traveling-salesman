!function(t){var e={};function i(n){if(e[n])return e[n].exports;var s=e[n]={i:n,l:!1,exports:{}};return t[n].call(s.exports,s,s.exports,i),s.l=!0,s.exports}i.m=t,i.c=e,i.d=function(t,e,n){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var s in t)i.d(n,s,function(e){return t[e]}.bind(null,s));return n},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=0)}([function(t,e,i){"use strict";function n(t,e,i){return e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}function s(t,e){var i=e.get(t);if(!i)throw new TypeError("attempted to get private field on non-instance");return i.get?i.get.call(t):i.value}i.r(e);class o{constructor(t,e){n(this,"cityA",void 0),n(this,"cityB",void 0),r.set(this,{writable:!0,value:3}),c.set(this,{writable:!0,value:"#757575"}),this.cityA=t,this.cityB=e}draw(t){t.beginPath(),t.moveTo(this.cityA.xPos,this.cityA.yPos),t.lineTo(this.cityB.xPos,this.cityB.yPos),t.strokeStyle=s(this,c),t.lineWidth=s(this,r),t.stroke()}length(){return this.cityA.distanceFromCity(this.cityB)}}var r=new WeakMap,c=new WeakMap;function a(t,e,i){return e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}class h{constructor(t=[]){a(this,"cities",void 0),a(this,"roads",void 0),a(this,"totalLength",void 0),this.cities=t.slice(),this.roads=[]}length(){let t=0;for(let e=0;e<this.cities.length-1;e++)t+=this.cities[e].distanceFromCity(this.cities[e+1]);return t+=this.cities[0].distanceFromCity(this.cities[this.cities.length-1]),this.totalLength=t,t}_createRoads(){if(this.roads=[],this.cities.length>2){for(let t=0;t<this.cities.length-1;t++)this.roads.push(new o(this.cities[t],this.cities[t+1]));this.roads.push(new o(this.cities[this.cities.length-1],this.cities[0]))}return this.roads}addCity(t){this.cities.push(t)}draw(t){t.clearRect(0,0,t.canvas.clientWidth,t.canvas.clientHeight),this._createRoads(),this.roads.forEach(e=>e.draw(t)),this.cities.forEach(e=>e.draw(t))}positionInCity(t,e){return this.cities.filter(i=>i.pointIsInCity(t,e))}randomizeRoute(){this.cities=this.cities.sort(()=>Math.random()-.5)}getRandomCityIndex(t=0,e=this.cities.length){return(Math.ceil(Math.random()*Math.min(this.cities.length-1,e))+t)%this.cities.length}getCityByIndex(t){return this.cities[t]}getLengthChangeFromSwappingCities(t,e){let i=0,n=this.cities[t],s=this.cities[e],o=this.cities[0==t?this.cities.length-1:t-1],r=this.cities[(e+1)%this.cities.length];return i+=n.distanceFromCity(o),i+=s.distanceFromCity(r),i-=n.distanceFromCity(r),i-=s.distanceFromCity(o),i<.001&&i>-.001&&(i=0),i}swapCitiesByIndex(t,e){if(t==e)return;if(t>e){let i=t;t=e,e=i}let i=this.cities.slice();this.cities=[...i.slice(0,t)],this.cities.push(...i.slice(t,e+1).reverse()),this.cities.push(...i.slice(e+1))}removeCity(t){this.cities=this.cities.filter(e=>e.xPos!=t.xPos&&e.yPos!=t.yPos)}findNeighbors(t){if(0==this.cities.includes(t))throw new Error("City is not in tour, cannot find neighbors");if(this.cities.length<3)throw new Error("Tour does not have enough cities to find neighbors");let e=[],i=this.cities.indexOf(t);switch(i){case 0:e.push(this.cities[this.cities.length-1]),e.push(this.cities[1]);break;case this.cities.length-1:e.push(this.cities[i-1]),e.push(this.cities[0]);break;default:e.push(this.cities[i-1]),e.push(this.cities[i+1])}return e}cityNeighborsAreClosest(t){const e=this.findNeighbors(t),i=Math.max(...e.map(e=>t.distanceFromCity(e)));for(let n=0;n<this.cities.length;n++){if(e.includes(this.cities[n])||this.cities[n]==t)continue;if(t.distanceFromCity(this.cities[n])<=i)return!1}return!0}clear(){this.cities=[],this.roads=[],this.totalLength=void 0}static getPermutations(t){return(t=>{let e=[];const i=(t,n=[])=>{if(0===t.length)e.push(n);else for(let e=0;e<t.length;e++){let s=t.slice(),o=s.splice(e,1);i(s.slice(),n.concat(o))}};return i(t),e})(t.cities)}}class l{static optimize(t,e,i,n){if(t.cities.length<4)return t;switch(e){case"annealing":t=l.annealing(t,i,!!n);break;case"greedy":t=l.greedy(t);break;case"bogo":t=l.bogo(t);break;case"force":t=l.force(t);break;case"uncross":t=l.uncross(t,!!n);break;default:t=l.uncross(t,!!n)}return t}static annealing(t,e,i,n=150){function s(t,e,i){return i*(1-t/e)+1e-4}i||(t=l.greedy(t)),null!=e&&(n=(e.getBoundingClientRect().width+e.getBoundingClientRect().height)/18);let o=i?1.8:2.5,r=100*t.cities.length+(t.cities.length>10?(t.cities.length-10)**o:0),c=0,a=t.length(),d=new h(t.cities),u=d,g=a;for(;c<r;){let t=s(c,r,n);const e=new h(u.cities),i=e.getRandomCityIndex();let o=e.getRandomCityIndex(i,t);const l=e.getLengthChangeFromSwappingCities(i,o),f=Math.random(),m=Math.exp(-Math.abs(l)/t);if(l>0||0!=l&&f<=m){e.swapCitiesByIndex(i,o),u=e;let t=e.length();g=t,t<a&&(a=t,d=e)}c++}return d}static greedy(t){if(t.cities.length<4)return t;for(let e=0;e<t.cities.length-1;e++){let i=e+1,n=1/0;for(let s=i;s<t.cities.length;s++){let o=t.cities[e].distanceFromCity(t.cities[s]);o<n&&(i=s,n=o)}t.swapCitiesByIndex(e+1,i)}return t}static bogo(t){return t.randomizeRoute(),t}static force(t){if(t.cities.length>9)return alert("Brute force is slow. Very slow. It will likely take minutes if not much longer, so the algorithm was aborted. Please delete cities or choose another algorithm."),t;let e=t.length(),i=new h(t.cities);return h.getPermutations(t).forEach(t=>{let n=new h(t);const s=n.length();s<e&&(e=s,i=n)}),i}static uncross(t,e){e||(t=l.greedy(t));let i,n=t.length();do{i=n;for(let e=0;e<t.cities.length;e++)for(let i=e+1;i<t.cities.length;i++){if(e==i)continue;const s=new h(t.cities);s.getLengthChangeFromSwappingCities(e,i)>0&&(s.swapCitiesByIndex(e,i),t=s,n=s.length())}}while(t.length().toFixed(2)!=i.toFixed(2));return t}}function d(t,e,i){return e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}class u{constructor(t,e,i){d(this,"xPos",void 0),d(this,"yPos",void 0),d(this,"canvas",void 0),g.set(this,{writable:!0,value:"#757575"}),this.canvas=i,this.move(t,e)}draw(t){t.beginPath(),t.arc(this.xPos,this.yPos,u.radius,0,2*Math.PI),t.fillStyle=function(t,e){var i=e.get(t);if(!i)throw new TypeError("attempted to get private field on non-instance");return i.get?i.get.call(t):i.value}(this,g),t.fill()}pointIsInCity(t,e){return this.distanceFromPoint(t,e)<u.radius}distanceFromPoint(t,e){return Math.sqrt((t-this.xPos)**2+(e-this.yPos)**2)}distanceFromCity(t){return Math.sqrt((t.xPos-this.xPos)**2+(t.yPos-this.yPos)**2)}move(t,e){t<u.radius&&(t=u.radius),e<u.radius&&(e=u.radius),t>this.canvas.getBoundingClientRect().width-u.radius&&(t=this.canvas.getBoundingClientRect().width-u.radius),e>this.canvas.getBoundingClientRect().height-u.radius&&(e=this.canvas.getBoundingClientRect().height-u.radius),this.xPos=t,this.yPos=e}}var g=new WeakMap;let f,m;d(u,"radius",10);let y,p,b,v,w=new h;let C={force:"<b>Brute Force Algorithm</b>: Checks every possible path, guarantees shortest path",greedy:"<b>Greedy Algorithm</b>: Each node goes to the next closest node, finds suboptimal path excluding trivial cases",hillClimber:"<b>Hill Climber Algorithm</b>: Compares tiny changes to current path, chooses better one",annealing:"<b>Annealing Algorithm</b>: Like hill climber but avoids local minimums",genetic:"<b>Genetic Algorithm</b>: Simulates all of human life",uncross:"<b>Uncrossing Algorithm</b>: Chooses random path, then uncrosses intersections",speedy:"<b>Speedy Algorithm</b>: A custom algorithm that combines greedy, annealing, and uncrossing algorithms",bogo:"<b>Bogo-Style Algorithm</b>: Chooses random path, odds of finding shortest path is 1:(n - 1)!"};function P(t=!1){let e=performance.now();w=t?l.optimize(w,b,f,y):l.optimize(w,b,f);let i=performance.now();v.innerHTML=(i-e).toFixed(3),w.draw(m)}function x(t){return[t.clientX-f.getBoundingClientRect().left,t.clientY-f.getBoundingClientRect().top]}function B(t){if(!(3==t.which||2==t.button)){p=x(t);let i=(null==e&&(e=p),w.positionInCity(e[0],e[1]));i.length?y=i[0]:function(t){let e=t.clientX-f.getBoundingClientRect().left-u.radius/2,i=t.clientY-f.getBoundingClientRect().top-u.radius/2,n=new u(e,i,f);w.addCity(n),P()}(t)}var e}function M(t){let e=x(t);var i,n;y&&(i=e,n=p,Math.sqrt((i[0]-n[0])**2+(i[1]-n[1])**2)<u.radius)&&(w.removeCity(y),y=void 0,P()),p=void 0,y=void 0}function R(t){if(y){let e=x(t);y.move(e[0],e[1]),P(!0)}}function E(t){const e=window.devicePixelRatio||1;let i=window.innerWidth,n=window.innerHeight;n-=document.querySelector("#top-navbar").getBoundingClientRect().height,n-=document.querySelector("#bottom-navbar").getBoundingClientRect().height,i*=e,n*=e,function(t,e,i,n){if(w.cities.length){const s=i/t,o=n/e;w.cities.forEach(t=>{t.canvas=f,t.move(Math.round(t.xPos*s),Math.round(t.yPos*o))})}}(t.width,t.height,i,n),t.width=i,t.height=n,m=t.getContext("2d"),m.scale(e,e),P()}function F(){b=document.getElementById("algorithm-mode").value,w.randomizeRoute(),P(),document.querySelector("#algorithm-descriptions").innerHTML=C[b]}function I(t){const e=f.getBoundingClientRect().width,i=f.getBoundingClientRect().height,n=u.radius;w.clear();for(let s=0;s<t;s++){const t=new u(Math.floor(Math.random()*(e-2*n))+n,Math.floor(Math.random()*(i-2*n))+n,f);w.addCity(t)}F()}function k(){w.clear(),P()}window.addEventListener("DOMContentLoaded",(function(){var t;f=document.querySelector("canvas"),v=document.querySelector("#timing"),E(t=f),t.addEventListener("mousedown",B),t.addEventListener("mouseup",M),t.addEventListener("mousemove",R),document.getElementById("algorithm-mode").addEventListener("change",F),document.getElementById("clear-board").addEventListener("click",k),document.getElementById("random-board").addEventListener("click",()=>I(200)),window.addEventListener("resize",()=>E(f)),I(200)}))}]);